{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dynamic-message/dynamic-message.component.ts","webpack:///src/app/dynamic-message/dynamic-message.component.html","webpack:///src/app/models/automata.ts","webpack:///src/app/models/transition-state-diagram.ts","webpack:///src/app/svg-renderer.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///path (ignored)","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","svgRendererService","resolver","sanitizer","STARTING_INDEX","selected","text","count","Array","state","automata","dfa","acceptStates","indexOf","symbol","transitionStateDiagram","transitionStates","has","get","message","entry","clear","factory","resolveComponentFactory","componentReference","createComponent","instance","destroy","match","regex","createSvg","error","createSvgFrom","dfaDotScript","nfaDotScript","dotScript","render","svg","bypassSecurityTrustHtml","substring","length","regexInputChanged","setNfa","setDfa","read","DynamicMessageComponent","Automata","parser","RegParser","parseToDFA","toDotScript","nfa","parseToNFA","TransitionStateDiagram","symbols","Set","initialState","finalStates","transitions","Map","nextState","add","set","push","SvgRendererService","Module","renderString","providedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AppComponent} from './app.component';\n\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'state-diagram-generator';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  body {\n    padding: 0;\n    margin: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .spacer {\n    flex: 1;\n  }\n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo {\n    height: 40px;\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo:hover {\n    opacity: 0.8;\n  }\n\n  .content {\n    display: flex;\n    margin: 82px auto 32px;\n    padding: 0 16px;\n    max-width: 960px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg.material-icons {\n    height: 24px;\n    width: auto;\n  }\n\n  svg.material-icons:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  .card svg.material-icons path {\n    fill: #888;\n  }\n\n  .card-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-top: 16px;\n  }\n\n  .card {\n    border-radius: 4px;\n    border: 1px solid #eee;\n    background-color: #fafafa;\n    height: 40px;\n    width: 200px;\n    margin: 0 8px 16px;\n    padding: 16px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    line-height: 24px;\n  }\n\n  .card-container .card:not(:last-child) {\n    margin-right: 0;\n  }\n\n  .card.card-small {\n    height: 16px;\n    width: 168px;\n  }\n\n  .card-container .card:not(.highlight-card) {\n    cursor: pointer;\n  }\n\n  .card-container .card:not(.highlight-card):hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n  }\n\n  .card-container .card:not(.highlight-card):hover .material-icons path {\n    fill: rgb(105, 103, 103);\n  }\n\n  .card.highlight-card {\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n    border: none;\n    width: auto;\n    min-width: 30%;\n    position: relative;\n  }\n\n  .card.card.highlight-card span {\n    margin-left: 60px;\n  }\n\n  svg#rocket {\n    width: 80px;\n    position: absolute;\n    left: -10px;\n    top: -24px;\n  }\n\n  svg#rocket-smoke {\n    height: calc(100vh - 95px);\n    position: absolute;\n    top: 10px;\n    right: 180px;\n    z-index: -10;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: #1976d2;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #125699;\n  }\n\n  .terminal {\n    position: relative;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 6px;\n    padding-top: 45px;\n    margin-top: 8px;\n    overflow: hidden;\n    background-color: rgb(15, 15, 16);\n  }\n\n  .terminal::before {\n    content: \"\\2022 \\2022 \\2022\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 4px;\n    background: rgb(58, 58, 58);\n    color: #c2c3c4;\n    width: 100%;\n    font-size: 2rem;\n    line-height: 0;\n    padding: 14px 0;\n    text-indent: 4px;\n  }\n\n  .terminal pre {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n    color: white;\n    padding: 0 1rem 1rem;\n    margin: 0;\n  }\n\n  .circle-link {\n    height: 40px;\n    width: 40px;\n    border-radius: 40px;\n    margin: 8px;\n    background-color: white;\n    border: 1px solid #eeeeee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: 1s ease-out;\n  }\n\n  .circle-link:hover {\n    transform: translateY(-0.25rem);\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  footer {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    line-height: 20px;\n  }\n\n  footer a {\n    display: flex;\n    align-items: center;\n  }\n\n  .github-star-badge {\n    color: #24292e;\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding: 3px 10px;\n    border: 1px solid rgba(27,31,35,.2);\n    border-radius: 3px;\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\n    margin-left: 4px;\n    font-weight: 600;\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\n  }\n\n  .github-star-badge:hover {\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\n    border-color: rgba(27,31,35,.35);\n    background-position: -.5em;\n  }\n\n  .github-star-badge .material-icons {\n    height: 16px;\n    width: 16px;\n    margin-right: 4px;\n  }\n\n  svg#clouds {\n    position: fixed;\n    bottom: -160px;\n    left: -230px;\n    z-index: -10;\n    width: 1920px;\n  }\n\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n</style>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {FormsModule} from '@angular/forms';\nimport { DynamicMessageComponent } from './dynamic-message/dynamic-message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    DynamicMessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, ComponentFactoryResolver, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {SvgRendererService} from '../svg-renderer.service';\r\nimport {DynamicMessageComponent} from '../dynamic-message/dynamic-message.component';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {Automata} from '../models/automata';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.sass']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private readonly STARTING_INDEX = 264;\r\n  regex: string;\r\n  componentReference: any;\r\n  automata: Automata;\r\n  selected: 'dfa' | 'nfa' = 'dfa';\r\n  text = '';\r\n\r\n  @ViewChild('messageContainer', {read: ViewContainerRef}) entry: ViewContainerRef;\r\n\r\n  constructor(private readonly svgRendererService: SvgRendererService,\r\n              private readonly resolver: ComponentFactoryResolver,\r\n              private readonly sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  generateArray(count: number): number[] {\r\n    return [...Array(count).keys()];\r\n  }\r\n\r\n  isAcceptState(state: string): boolean {\r\n    return this.automata.dfa.acceptStates.indexOf(state) >= 0 ;\r\n  }\r\n\r\n  getNextStateFor(state: string, symbol: string) {\r\n    if (this.automata.transitionStateDiagram.transitionStates[state] &&\r\n      this.automata.transitionStateDiagram.transitionStates[state].has(symbol)) {\r\n      return this.automata.transitionStateDiagram.transitionStates[state].get(symbol);\r\n    }\r\n    return '&Phi;';\r\n  }\r\n\r\n  createComponent(message) {\r\n    this.entry.clear();\r\n    const factory = this.resolver.resolveComponentFactory(DynamicMessageComponent);\r\n    this.componentReference = this.entry.createComponent(factory);\r\n    this.componentReference.instance.message = message;\r\n  }\r\n\r\n  destroyComponent() {\r\n    this.componentReference.destroy();\r\n  }\r\n\r\n  recognizedByLanguage(): boolean {\r\n    if (this.automata && this.automata.dfa) {\r\n      return this.automata.dfa.match(this.text);\r\n    }\r\n  }\r\n\r\n  regexInputChanged() {\r\n    if (this.regex !== '' || this.regex !== null) {\r\n      try {\r\n        this.automata = new Automata(this.regex);\r\n        this.createSvg();\r\n      } catch (error) {\r\n      }\r\n    }\r\n  }\r\n\r\n  createSvg() {\r\n    switch (this.selected) {\r\n      case 'dfa': return this.createSvgFrom(this.automata.dfaDotScript);\r\n      case 'nfa': return this.createSvgFrom(this.automata.nfaDotScript);\r\n    }\r\n  }\r\n\r\n  createSvgFrom(dotScript: string): void {\r\n    this.svgRendererService.render(dotScript).then((svg: string) => {\r\n      this.createComponent(this.sanitizer.bypassSecurityTrustHtml(svg.substring(this.STARTING_INDEX, svg.length)));\r\n    }).catch(error => {\r\n    });\r\n  }\r\n\r\n  setNfa() {\r\n    this.selected = 'nfa';\r\n    this.createSvgFrom(this.automata.nfaDotScript);\r\n  }\r\n\r\n  setDfa() {\r\n    this.selected = 'dfa';\r\n    this.createSvgFrom(this.automata.dfaDotScript);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"component-wrapper\">\r\n  <div id=\"toolbar\">\r\n    <div>Automata Creator and Checker</div>\r\n  </div>\r\n\r\n  <div id=\"main\">\r\n    <div id=\"deck-1\">\r\n      <table *ngIf=\"automata !== undefined && automata.transitionStateDiagram !== undefined\">\r\n        <tr>\r\n          <th>State</th>\r\n          <th *ngFor=\"let symbol of automata.transitionStateDiagram.symbols\">\r\n            {{symbol}}\r\n          </th>\r\n        </tr>\r\n\r\n        <tr *ngFor=\"let state of generateArray(automata.dfa.numOfStates); let i = index\">\r\n          <td [ngClass]=\"{'accept-state': isAcceptState(i.toString())}\"><span *ngIf=\"i === 0\">\t&rarr; </span>{{i}}</td>\r\n          <td *ngFor=\"let symbol of automata.transitionStateDiagram.symbols; let transitionIndex = index\" [innerHTML]=\"getNextStateFor(i.toString(), symbol)\">\r\n            {{getNextStateFor(i.toString(), symbol)}}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n\r\n\r\n    <div id=\"deck-2\">\r\n      <div id=\"regexp-checker\">\r\n        <label for=\"regex\">Enter Regular Expression to generate Finite automata</label>\r\n        <input type=\"text\" name=\"regex\" id=\"regex\" [(ngModel)]=\"regex\" (ngModelChange)=\"regexInputChanged()\">\r\n        <label for=\"string-parse\">Enter string to check if it is recognized by regular language</label>\r\n        <textarea id=\"string-parse\" [(ngModel)]=\"text\" class=\"isRecognized\"></textarea>\r\n        <div *ngIf=\"recognizedByLanguage()\" class=\"recognized\">This is recognized by the automata</div>\r\n        <div *ngIf=\"!recognizedByLanguage()\" class=\"not-recognized\">This is not recognized by the automata</div>\r\n      </div>\r\n      <div id=\"automata-display-panel\">\r\n        <div id=\"automata-toolbar\">\r\n          <a [class.selected]=\"this.selected === 'nfa'\" (click)=\"setNfa()\">Non-deterministic Finite Automata</a>\r\n          <a [class.selected]=\"this.selected === 'dfa'\" (click)=\"setDfa()\">Deterministic Finite Automata</a>\r\n        </div>\r\n        <div id=\"automata-container\">\r\n          <template #messageContainer></template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-message',\n  templateUrl: './dynamic-message.component.html',\n  styleUrls: ['./dynamic-message.component.sass']\n})\nexport class DynamicMessageComponent implements OnInit {\n\n  message: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<span [innerHTML]=\"message\"></span>\n","import regParser from 'automata.js';\r\nimport {FiniteStateMachine} from './finite-state-machine';\r\nimport {TransitionStateDiagram} from './transition-state-diagram';\r\n\r\nexport class Automata {\r\n  parser;\r\n  nfa: FiniteStateMachine;\r\n  dfa: FiniteStateMachine;\r\n  dfaDotScript: string;\r\n  nfaDotScript: string;\r\n  transitionStateDiagram: TransitionStateDiagram;\r\n\r\n  constructor(regex: string) {\r\n    try {\r\n      this.parser = new regParser.RegParser(regex);\r\n      this.dfa = this.parser.parseToDFA();\r\n      this.dfaDotScript = this.dfa.toDotScript();\r\n      this.parser = new regParser.RegParser(regex);\r\n      this.nfa = this.parser.parseToNFA();\r\n      this.nfaDotScript = this.nfa.toDotScript();\r\n      this.transitionStateDiagram = new TransitionStateDiagram(this.dfa);\r\n    } catch (error) {\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable:forin */\r\nimport {FiniteStateMachine} from './finite-state-machine';\r\nimport {Transitions} from './transitions';\r\n\r\nexport class TransitionStateDiagram {\r\n  initialState: string;\r\n  finalStates: string[];\r\n  transitionStates: Transitions[] = [];\r\n  symbols = new Set<string>();\r\n\r\n  constructor(dfa: FiniteStateMachine) {\r\n    this.initialState = dfa.initialState;\r\n    this.finalStates = dfa.acceptStates;\r\n\r\n    for (const state in dfa.transitions) {\r\n      const transitions = new Map<string, string>();\r\n      for (const nextState in dfa.transitions[state]) {\r\n        const symbol = dfa.transitions[state][nextState];\r\n        this.symbols.add(symbol);\r\n        transitions.set(symbol, nextState);\r\n      }\r\n      this.transitionStates.push(transitions);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n\nimport {Module, render} from 'viz.js/full.render.js';\nimport Viz from 'viz.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SvgRendererService {\n\n  constructor() {\n  }\n\n  render(dotScript: string) {\n    return new Viz({ Module, render }).renderString(dotScript);\n      // .then(result => {\n      //   return result;\n      // })\n      // .catch(error => {\n      //   // Create a new Viz instance (@see Caveats page for more info)\n      //   viz = new Viz({ Module, render });\n      //\n      //   // Possibly display the error\n      //   console.error(error);\n      // });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}